
import org.springframework.web.client.RestTemplate;

import rx.Observable;
import rx.Observable.OnSubscribe;
import rx.Subscriber;
import rx.functions.Action1;
import rx.schedulers.Schedulers;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Client {
	public static void main(String[] args) throws Exception {
		long start = System.currentTimeMillis();
		Observable<String> o1 = Observable.create(new OnSubscribe<String>() {

			@Override
			public void call(Subscriber<? super String> t) {
				t.onNext(getCustomer());
			}
		}).subscribeOn(Schedulers.newThread());
		Observable<String> o2 = Observable.<String>create(t -> t.onNext(getProduct())).subscribeOn(Schedulers.newThread());
		Observable.zip(o1, o2, (t1, t2) -> t1 +">>>>>>>>>>>>>>>>>>>>>>>>>>>\n" +t2).forEach(new Action1<String>() {

			@Override
			public void call(String t) {
				long end = System.currentTimeMillis();
				System.out.println(">>>>>>>>>>> "+(end-start)/1000+">>>>>>>>>>>>>>>>>>>");
				System.out.println(t);
			}
		});
		Thread.sleep(10000);
	}

	private static String getCustomer() {
		RestTemplate restTemplate = new RestTemplate();
		System.out.println(Thread.currentThread().getName());
		try {
			Thread.sleep(2000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String forObject = restTemplate.getForObject("http://localhost:8080/customers", String.class);
		return forObject;
	}

	private static String getProduct() {
		RestTemplate restTemplate = new RestTemplate();
		System.out.println(Thread.currentThread().getName());
		try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String forObject = restTemplate.getForObject("http://localhost:8080/products", String.class);
		return forObject;
	}
}
